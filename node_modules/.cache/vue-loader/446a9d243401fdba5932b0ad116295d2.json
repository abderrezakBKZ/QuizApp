{"remainingRequest":"C:\\Users\\Abderrezak\\Desktop\\FirstVueApp-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Abderrezak\\Desktop\\FirstVueApp-master\\src\\components\\QuestionBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Abderrezak\\Desktop\\FirstVueApp-master\\src\\components\\QuestionBox.vue","mtime":1609179636000},{"path":"C:\\Users\\Abderrezak\\Desktop\\FirstVueApp-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Abderrezak\\Desktop\\FirstVueApp-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Abderrezak\\Desktop\\FirstVueApp-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Abderrezak\\Desktop\\FirstVueApp-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBfIGZyb20gJ2xvZGFzaCcKZXhwb3J0IGRlZmF1bHQgewogICAgcHJvcHMgOiB7CiAgICAgICAgY3VycmVudFF1ZXN0aW9uIDogT2JqZWN0LAogICAgICAgIG5leHQgOiBGdW5jdGlvbiwKICAgICAgICBpbmNyZW1lbnQ6IEZ1bmN0aW9uCiAgICAgICAgCiAgICB9LAogICAgCndhdGNoIDogewogICAgY3VycmVudFF1ZXN0aW9uOiB7CiAgICAgICAgaW1tZWRpYXRlOiB0cnVlICwKICAgICAgICBoYW5kbGVyICgpIHsKICAgICAgICAgICAgdGhpcy5zZWxlY3RlZEluZGV4ID0gbnVsbAogICAgICAgICAgICB0aGlzLnNodWZmbGVBbnN3ZXJzICgpIDsKICAgICAgICAgICAgdGhpcy5hbnN3ZXJlZCA9IGZhbHNlICAKCiAgICAgICAgfQogICAgfQp9LAoKCgoKICAgIGRhdGEgKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHNlbGVjdGVkSW5kZXg6IG51bGwsCiAgICAgICAgICAgIHNodWZmbGVkQW5zd2VycyA6IFtdLAogICAgICAgICAgICBhbnN3ZXJlZCA6IGZhbHNlIAogICAgICAgIH0KICAgIH0sCm1ldGhvZHM6IHsKICAgIHNlbGVjdEFuc3dlciAoaW5kZXgpIHsKICAgICAgICB0aGlzLnNlbGVjdGVkSW5kZXggPSBpbmRleAogICAgICAgIAoKICAgIH0sCiAgICBhbnN3ZXJDbGFzcyAoaW5kZXgpIHsKICAgICAgICBsZXQgYW5zd2VyQ2xhc3MgPSAnJwoKICAgICAgICBpZiAgKCF0aGlzLmFuc3dlcmVkICYmIHRoaXMuc2VsZWN0ZWRJbmRleCA9PT0gaW5kZXgpIHsKICAgICAgICAgICAgYW5zd2VyQ2xhc3MgPSAnc2VsZWN0ZWQnCiAgICAgICAgfQogICAgICAgIGVsc2UgaWYgKHRoaXMuYW5zd2VyZWQgJiYgdGhpcy5jb3JyZWN0SW5kZXggPT09IGluZGV4KSB7CiAgICAgICAgICAgIGFuc3dlckNsYXNzID0gJ2NvcnJlY3QnIAogICAgICAgIH0KICAgICAgICBlbHNlIGlmICh0aGlzLmFuc3dlcmVkICYmIHRoaXMuc2VsZWN0ZWRJbmRleCA9PT0gaW5kZXggJiYgdGhpcy5jb3JyZWN0SW5kZXggIT09IGluZGV4ICkgewogICAgICAgICAgICBhbnN3ZXJDbGFzcyA9ICdpbmNvcnJlY3QnCiAgICAgICAgfSAKICAgICAgICByZXR1cm4gYW5zd2VyQ2xhc3MKICAgIH0sCiAgICBzaHVmZmxlQW5zd2VycyAoKSB7CiAgICAgICAgbGV0IGFuc3dlcnMgPSBbLi4udGhpcy5jdXJyZW50UXVlc3Rpb24uaW5jb3JyZWN0X2Fuc3dlcnMsdGhpcy5jdXJyZW50UXVlc3Rpb24uY29ycmVjdF9hbnN3ZXJdCiAgICAgICAgdGhpcy5zaHVmZmxlZEFuc3dlcnMgPSBfLnNodWZmbGUgKGFuc3dlcnMpCiAgICAgICAgdGhpcy5jb3JyZWN0SW5kZXggPSB0aGlzLnNodWZmbGVkQW5zd2Vycy5pbmRleE9mKHRoaXMuY3VycmVudFF1ZXN0aW9uLmNvcnJlY3RfYW5zd2VyKQogICAgfSwKCiAgICBzdWJtaXRBbnN3ZXIoKSB7CiAgICAgIGxldCBpc0NvcnJlY3QgPSBmYWxzZQogICAgICBpZiAodGhpcy5zZWxlY3RlZEluZGV4ID09PSB0aGlzLmNvcnJlY3RJbmRleCApIHsKICAgICAgICBpc0NvcnJlY3QgPSB0cnVlCiAgICAgIH0KICAgICAgdGhpcy5hbnN3ZXJlZCA9IHRydWUKICAgICAgdGhpcy5pbmNyZW1lbnQoaXNDb3JyZWN0KQogICAgfSwKCn0sCgoKCiAgICBjb21wdXRlZDogewogICAgYW5zd2VycyAoKSB7CiAgICAgICBsZXQgYW5zd2VycyA9IFsuLi50aGlzLmN1cnJlbnRRdWVzdGlvbi5pbmNvcnJlY3RfYW5zd2Vyc10KICAgICAgICBhbnN3ZXJzLnB1c2ggKHRoaXMuY3VycmVudFF1ZXN0aW9uLmNvcnJlY3RfYW5zd2VyKQogICAgICAgIHJldHVybiBhbnN3ZXJzCiAgICAgICAKICAgICB9Cn0KfQoKCgo="},{"version":3,"sources":["QuestionBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"QuestionBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div>\n  <b-jumbotron >\n    <template #header></template>\n\n    <template #lead>\n      {{currentQuestion.question}}\n    </template>\n\n    <hr class=\"my-4\">\n\n            <b-list-group>\n            \n                <b-list-group-item v-for=\"(answer,index) in shuffledAnswers\" :key=\"index\" @click=\"selectAnswer(index)\"\n                :class=\" answerClass (index)\">\n                 {{answer}} \n                 \n                </b-list-group-item>\n            </b-list-group>\n    \n\n    <b-button variant=\"primary\" @click ='submitAnswer' :disabled =\"selectedIndex===null || answered\" >\n    Submit</b-button>\n    <b-button @click=\"next\" variant=\"success\" href=\"#\">Next</b-button>\n  </b-jumbotron>\n</div>\n</template>\n\n<script>\nimport _ from 'lodash'\nexport default {\n    props : {\n        currentQuestion : Object,\n        next : Function,\n        increment: Function\n        \n    },\n    \nwatch : {\n    currentQuestion: {\n        immediate: true ,\n        handler () {\n            this.selectedIndex = null\n            this.shuffleAnswers () ;\n            this.answered = false  \n\n        }\n    }\n},\n\n\n\n\n    data () {\n        return {\n            selectedIndex: null,\n            shuffledAnswers : [],\n            answered : false \n        }\n    },\nmethods: {\n    selectAnswer (index) {\n        this.selectedIndex = index\n        \n\n    },\n    answerClass (index) {\n        let answerClass = ''\n\n        if  (!this.answered && this.selectedIndex === index) {\n            answerClass = 'selected'\n        }\n        else if (this.answered && this.correctIndex === index) {\n            answerClass = 'correct' \n        }\n        else if (this.answered && this.selectedIndex === index && this.correctIndex !== index ) {\n            answerClass = 'incorrect'\n        } \n        return answerClass\n    },\n    shuffleAnswers () {\n        let answers = [...this.currentQuestion.incorrect_answers,this.currentQuestion.correct_answer]\n        this.shuffledAnswers = _.shuffle (answers)\n        this.correctIndex = this.shuffledAnswers.indexOf(this.currentQuestion.correct_answer)\n    },\n\n    submitAnswer() {\n      let isCorrect = false\n      if (this.selectedIndex === this.correctIndex ) {\n        isCorrect = true\n      }\n      this.answered = true\n      this.increment(isCorrect)\n    },\n\n},\n\n\n\n    computed: {\n    answers () {\n       let answers = [...this.currentQuestion.incorrect_answers]\n        answers.push (this.currentQuestion.correct_answer)\n        return answers\n       \n     }\n}\n}\n\n\n\n</script>\n\n\n<style scoped>\n.list-group {\n    margin-bottom : 15px;\n}\n.list-group-item:hover {\n    background:  #EEE;\n    cursor : pointer ;\n}\n.btn {\n    margin : 0 5px;\n}\n\n.selected {\n    background-color : lightblue ;\n}\n\n.correct {\n    background-color : lightgreen ;\n}\n.incorrect {\n    background-color : red ;\n}\n\n</style>"]}]}