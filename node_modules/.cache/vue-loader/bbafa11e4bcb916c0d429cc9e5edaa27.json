{"remainingRequest":"C:\\Users\\Abderrezak\\quiz2\\project_quiz\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Abderrezak\\quiz2\\project_quiz\\src\\components\\QuestionBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Abderrezak\\quiz2\\project_quiz\\src\\components\\QuestionBox.vue","mtime":1609188120917},{"path":"C:\\Users\\Abderrezak\\quiz2\\project_quiz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Abderrezak\\quiz2\\project_quiz\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Abderrezak\\quiz2\\project_quiz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Abderrezak\\quiz2\\project_quiz\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgXyBmcm9tICdsb2Rhc2gnDQpleHBvcnQgZGVmYXVsdCB7DQogICAgcHJvcHMgOiB7DQogICAgICAgIGN1cnJlbnRRdWVzdGlvbiA6IE9iamVjdCwNCiAgICAgICAgbmV4dCA6IEZ1bmN0aW9uLA0KICAgICAgICBpbmNyZW1lbnQ6IEZ1bmN0aW9uDQogICAgICAgIA0KICAgIH0sDQogICAgDQp3YXRjaCA6IHsNCiAgICBjdXJyZW50UXVlc3Rpb246IHsNCiAgICAgICAgaW1tZWRpYXRlOiB0cnVlICwNCiAgICAgICAgaGFuZGxlciAoKSB7DQogICAgICAgICAgICB0aGlzLnNlbGVjdGVkSW5kZXggPSBudWxsDQogICAgICAgICAgICB0aGlzLnNodWZmbGVBbnN3ZXJzICgpIDsNCiAgICAgICAgICAgIHRoaXMuYW5zd2VyZWQgPSBmYWxzZTsgDQogICAgICAgICAgICB0aGlzLnVubG9jayA9IGZhbHNlICANCg0KICAgICAgICB9DQogICAgfQ0KfSwNCg0KDQoNCg0KICAgIGRhdGEgKCkgew0KICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgc2VsZWN0ZWRJbmRleDogbnVsbCwNCiAgICAgICAgICAgIHNodWZmbGVkQW5zd2VycyA6IFtdLA0KICAgICAgICAgICAgYW5zd2VyZWQgOiBmYWxzZSAsDQogICAgICAgICAgICB1bmxvY2sgOiBmYWxzZQ0KICAgICAgICB9DQogICAgfSwNCm1ldGhvZHM6IHsNCiAgICBzZWxlY3RBbnN3ZXIgKGluZGV4KSB7DQogICAgICAgIHRoaXMuc2VsZWN0ZWRJbmRleCA9IGluZGV4DQogICAgICAgIA0KDQogICAgfSwNCiAgICBhbnN3ZXJDbGFzcyAoaW5kZXgpIHsNCiAgICAgICAgbGV0IGFuc3dlckNsYXNzID0gJycNCg0KICAgICAgICBpZiAgKCF0aGlzLmFuc3dlcmVkICYmIHRoaXMuc2VsZWN0ZWRJbmRleCA9PT0gaW5kZXgpIHsNCiAgICAgICAgICAgIGFuc3dlckNsYXNzID0gJ3NlbGVjdGVkJw0KICAgICAgICB9DQogICAgICAgIGVsc2UgaWYgKHRoaXMuYW5zd2VyZWQgJiYgdGhpcy5jb3JyZWN0SW5kZXggPT09IGluZGV4KSB7DQogICAgICAgICAgICBhbnN3ZXJDbGFzcyA9ICdjb3JyZWN0JyANCiAgICAgICAgfQ0KICAgICAgICBlbHNlIGlmICh0aGlzLmFuc3dlcmVkICYmIHRoaXMuc2VsZWN0ZWRJbmRleCA9PT0gaW5kZXggJiYgdGhpcy5jb3JyZWN0SW5kZXggIT09IGluZGV4ICkgew0KICAgICAgICAgICAgYW5zd2VyQ2xhc3MgPSAnaW5jb3JyZWN0Jw0KICAgICAgICB9IA0KICAgICAgICByZXR1cm4gYW5zd2VyQ2xhc3MNCiAgICB9LA0KICAgIHNodWZmbGVBbnN3ZXJzICgpIHsNCiAgICAgICAgbGV0IGFuc3dlcnMgPSBbLi4udGhpcy5jdXJyZW50UXVlc3Rpb24uaW5jb3JyZWN0X2Fuc3dlcnMsdGhpcy5jdXJyZW50UXVlc3Rpb24uY29ycmVjdF9hbnN3ZXJdDQogICAgICAgIHRoaXMuc2h1ZmZsZWRBbnN3ZXJzID0gXy5zaHVmZmxlIChhbnN3ZXJzKQ0KICAgICAgICB0aGlzLmNvcnJlY3RJbmRleCA9IHRoaXMuc2h1ZmZsZWRBbnN3ZXJzLmluZGV4T2YodGhpcy5jdXJyZW50UXVlc3Rpb24uY29ycmVjdF9hbnN3ZXIpDQogICAgfSwNCg0KICAgIHN1Ym1pdEFuc3dlcigpIHsNCiAgICAgIGxldCBpc0NvcnJlY3QgPSBmYWxzZQ0KICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRJbmRleCA9PT0gdGhpcy5jb3JyZWN0SW5kZXggKSB7DQogICAgICAgIGlzQ29ycmVjdCA9IHRydWUNCiAgICAgIH0NCiAgICAgIHRoaXMuYW5zd2VyZWQgPSB0cnVlDQogICAgICB0aGlzLmluY3JlbWVudChpc0NvcnJlY3QpDQogICAgICB0aGlzLnVubG9jayA9IHRydWUNCiAgICB9LA0KDQp9LA0KDQoNCg0KICAgIGNvbXB1dGVkOiB7DQogICAgYW5zd2VycyAoKSB7DQogICAgICAgbGV0IGFuc3dlcnMgPSBbLi4udGhpcy5jdXJyZW50UXVlc3Rpb24uaW5jb3JyZWN0X2Fuc3dlcnNdDQogICAgICAgIGFuc3dlcnMucHVzaCAodGhpcy5jdXJyZW50UXVlc3Rpb24uY29ycmVjdF9hbnN3ZXIpDQogICAgICAgIHJldHVybiBhbnN3ZXJzDQogICAgICAgDQogICAgIH0NCn0NCn0NCg0KDQoNCg=="},{"version":3,"sources":["QuestionBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"QuestionBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n<div>\r\n  <b-jumbotron >\r\n    <template #header></template>\r\n\r\n    <template #lead>\r\n      {{currentQuestion.question}}\r\n    </template>\r\n\r\n    <hr class=\"my-4\">\r\n\r\n            <b-list-group>\r\n            \r\n                <b-list-group-item v-for=\"(answer,index) in shuffledAnswers\" :key=\"index\" @click=\"selectAnswer(index)\"\r\n                :class=\" answerClass (index)\">\r\n                 {{answer}} \r\n                 \r\n                </b-list-group-item>\r\n            </b-list-group>\r\n    \r\n\r\n    <b-button variant=\"primary\" @click ='submitAnswer' :disabled =\"selectedIndex===null || answered\" >\r\n    Submit</b-button>\r\n    <b-button @click=\"next\" variant=\"success\" href=\"#\" v-if ='unlock' >Next</b-button>\r\n  </b-jumbotron>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport _ from 'lodash'\r\nexport default {\r\n    props : {\r\n        currentQuestion : Object,\r\n        next : Function,\r\n        increment: Function\r\n        \r\n    },\r\n    \r\nwatch : {\r\n    currentQuestion: {\r\n        immediate: true ,\r\n        handler () {\r\n            this.selectedIndex = null\r\n            this.shuffleAnswers () ;\r\n            this.answered = false; \r\n            this.unlock = false  \r\n\r\n        }\r\n    }\r\n},\r\n\r\n\r\n\r\n\r\n    data () {\r\n        return {\r\n            selectedIndex: null,\r\n            shuffledAnswers : [],\r\n            answered : false ,\r\n            unlock : false\r\n        }\r\n    },\r\nmethods: {\r\n    selectAnswer (index) {\r\n        this.selectedIndex = index\r\n        \r\n\r\n    },\r\n    answerClass (index) {\r\n        let answerClass = ''\r\n\r\n        if  (!this.answered && this.selectedIndex === index) {\r\n            answerClass = 'selected'\r\n        }\r\n        else if (this.answered && this.correctIndex === index) {\r\n            answerClass = 'correct' \r\n        }\r\n        else if (this.answered && this.selectedIndex === index && this.correctIndex !== index ) {\r\n            answerClass = 'incorrect'\r\n        } \r\n        return answerClass\r\n    },\r\n    shuffleAnswers () {\r\n        let answers = [...this.currentQuestion.incorrect_answers,this.currentQuestion.correct_answer]\r\n        this.shuffledAnswers = _.shuffle (answers)\r\n        this.correctIndex = this.shuffledAnswers.indexOf(this.currentQuestion.correct_answer)\r\n    },\r\n\r\n    submitAnswer() {\r\n      let isCorrect = false\r\n      if (this.selectedIndex === this.correctIndex ) {\r\n        isCorrect = true\r\n      }\r\n      this.answered = true\r\n      this.increment(isCorrect)\r\n      this.unlock = true\r\n    },\r\n\r\n},\r\n\r\n\r\n\r\n    computed: {\r\n    answers () {\r\n       let answers = [...this.currentQuestion.incorrect_answers]\r\n        answers.push (this.currentQuestion.correct_answer)\r\n        return answers\r\n       \r\n     }\r\n}\r\n}\r\n\r\n\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.list-group {\r\n    margin-bottom : 15px;\r\n}\r\n.list-group-item:hover {\r\n    background:  #EEE;\r\n    cursor : pointer ;\r\n}\r\n.btn {\r\n    margin : 0 5px;\r\n}\r\n\r\n.selected {\r\n    background-color : lightblue ;\r\n}\r\n\r\n.correct {\r\n    background-color : lightgreen ;\r\n}\r\n.incorrect {\r\n    background-color : red ;\r\n}\r\n\r\n</style>"]}]}